# Generated by Django 5.0 on 2023-12-22 20:45

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('text', 'text'), ('container', 'container')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Hackathon',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('logo', models.ImageField(blank=True, max_length=250, null=True, upload_to='logo')),
                ('name', models.CharField(max_length=250)),
                ('organisation_name', models.CharField(default=None, max_length=250)),
                ('mode_of_conduct', models.CharField(choices=[('Online', 'Online'), ('Offline', 'Offline')], max_length=250)),
                ('deadline', models.DateField()),
                ('team_size', models.IntegerField()),
                ('visible', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], max_length=10)),
                ('start_date_time', models.DateTimeField()),
                ('about', models.TextField()),
                ('brief', models.TextField(default=None)),
                ('image1', models.ImageField(blank=True, max_length=250, null=True, upload_to='image')),
                ('image2', models.ImageField(blank=True, max_length=250, null=True, upload_to='image')),
                ('image3', models.ImageField(blank=True, max_length=250, null=True, upload_to='image')),
                ('image4', models.ImageField(blank=True, max_length=250, null=True, upload_to='image')),
                ('image5', models.ImageField(blank=True, max_length=250, null=True, upload_to='image')),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('fee', models.CharField(default=None, max_length=100)),
                ('venue', models.CharField(default=None, max_length=500)),
                ('contact1_name', models.CharField(default=None, max_length=250)),
                ('contact1_number', models.IntegerField(default=None)),
                ('contact2_name', models.CharField(default=None, max_length=250)),
                ('contact2_number', models.IntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Containerproperty',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('Color', models.CharField(blank=True, max_length=200, null=True)),
                ('border_color', models.CharField(max_length=200)),
                ('border_width', models.IntegerField()),
                ('height', models.IntegerField()),
                ('container', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon_template.container')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, choices=[('text', 'text'), ('container', 'container')], max_length=200, null=True)),
                ('hackathon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon_template.hackathon')),
            ],
        ),
        migrations.AddField(
            model_name='container',
            name='hackathon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon_template.hackathon'),
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('serial_number', models.IntegerField()),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField()),
                ('start_timeline', models.DateTimeField()),
                ('end_timeline', models.DateTimeField()),
                ('hackathon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hackathon_template.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='Textproperties',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('font', models.CharField(blank=True, max_length=200, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('text_color', models.CharField(blank=True, max_length=200, null=True)),
                ('font_weight', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(limit_value=100, message='Value must be greater than or equal to {limit_value}.'), django.core.validators.MaxValueValidator(limit_value=900, message='Value must be less than or equal to {limit_value}.')])),
                ('italics', models.BooleanField(blank=True, null=True)),
                ('underline', models.BooleanField(blank=True, null=True)),
                ('strikethrogh', models.BooleanField(blank=True, null=True)),
                ('upper_case', models.BooleanField(blank=True, null=True)),
                ('align', models.CharField(choices=[('right', 'right'), ('left', 'left'), ('center', 'center'), ('justify', 'justify')], max_length=10)),
                ('letter_spacing', models.IntegerField(blank=True, null=True)),
                ('field', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='hackathon_template.field')),
            ],
        ),
    ]
